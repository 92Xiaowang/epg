name: Generate epg

permissions:
  contents: write  # 允许提交代码和创建Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时执行一次

jobs:
  process-xml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # 保留凭证用于提交

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet gzip

      - name: Download e.xml
        run: |
          curl -o e.xml "http://epg.51zmt.top:8000/e.xml"
          if [ ! -s "e.xml" ]; then
            echo "Failed to download e.xml"
            exit 1
          fi

      - name: Remove desc field
        run: |
          xmlstarlet ed -d "//desc" e.xml > t.xml
          if [ ! -s "t.xml" ]; then
            echo "Failed to generate t.xml"
            exit 1
          fi

      - name: Create gzip archive
        run: |
          gzip -c t.xml > t.xml.gz
          if [ ! -s "t.xml.gz" ]; then
            echo "Failed to generate t.xml.gz"
            exit 1
          fi

      - name: Save files to epg folder
        run: |
          mkdir -p epg  # 创建epg文件夹（如不存在）
          cp t.xml epg/t.xml
          cp t.xml.gz epg/t.xml.gz
          # 检查文件夹是否创建成功
          if [ ! -d "epg" ]; then
            echo "epg folder not created"
            exit 1
          fi
          # 检查文件是否复制成功
          if [ ! -f "epg/t.xml" ] || [ ! -f "epg/t.xml.gz" ]; then
            echo "Files not copied to epg folder"
            exit 1
          fi

      - name: Commit epg folder to repository
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add epg/  # 添加epg文件夹到暂存区
          git commit -m "Update epg files at $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push origin main  # 推送到主分支（如分支名不同请修改，例如master）

      - name: Delete existing latest tag
        run: |
          git tag -d latest || true
          git push origin --delete latest || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: epg
          files: |
            epg/t.xml
            epg/t.xml.gz
          overwrite_files: true  # 替换已存在的文件（替代原replace_existing）

name: Generate epg

permissions:
  contents: write  # 确保有创建Release的权限

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次

jobs:
  process-xml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet gzip

      - name: Download e.xml
        run: |
          curl -o e.xml "http://epg.51zmt.top:8000/e.xml"
          if [ ! -s "e.xml" ]; then
            echo "Failed to download e.xml"
            exit 1
          fi

      - name: Remove desc field
        run: |
          xmlstarlet ed -d "//desc" e.xml > t.xml
          if [ ! -s "t.xml" ]; then
            echo "Failed to generate t.xml"
            exit 1
          fi

      - name: Create gzip archive
        run: |
          gzip -c t.xml > t.xml.gz
          if [ ! -s "t.xml.gz" ]; then
            echo "Failed to generate t.xml.gz"
            exit 1
          fi

      - name: Save files to epg folder
        run: |
          mkdir -p epg
          cp t.xml epg/t.xml
          cp t.xml.gz epg/t.xml.gz
          if [ ! -d "epg" ] || [ ! -f "epg/t.xml" ] || [ ! -f "epg/t.xml.gz" ]; then
            echo "Files or folder missing"
            exit 1
          fi

      - name: Force update t.xml modification time
        run: |
          # 强制更新t.xml的修改时间为当前时间（即使内容未变）
          touch epg/t.xml

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add epg/
          # 允许空提交，确保每次运行都有新的提交记录
          git commit -m "Update epg at $(date +'%Y-%m-%d %H:%M:%S')" --allow-empty || true
          git push origin main

      - name: Manage latest tag
        run: |
          git tag -d latest || true
          git push origin --delete latest || true
          git tag -a latest -m "Latest EPG release"
          git push origin latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create正式Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: EPG
          files: |
            epg/t.xml
            epg/t.xml.gz
          overwrite_files: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
